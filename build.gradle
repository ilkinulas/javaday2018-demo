buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'net.peakgames.sample'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.7.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    test {
        resources {
            srcDirs = ['src/main/lua', 'src/test/resources']
        }
    }
}


task duplicateTests {
    doLast {
        println "duplicating tests $numTests"
        (1..Integer.parseInt(numTests)).each { test_counter   ->
            println "Test_$test_counter"
            copy {
                from 'src/test/kotlin/net/ilkinulas/redis'
                into 'src/test/kotlin/net/ilkinulas/redis'
                filter {
                    it.replaceAll('class RedisQueueTest', 'class RedisQueueTest' + test_counter)
                }
                filter {
                    it.replaceAll('class KGenericContainer.*', '')
                }
                rename 'RedisQueueTest.kt', 'RedisQueueTest' + test_counter + '.kt'
                include 'RedisQueueTest.kt'
            }
        }
    }
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
}